[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 ggpicrust2 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Chen Yang. Author, maintainer. Liangliang Zhang. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Yang C, Zhang L (2023). ggpicrust2: Make 'PICRUSt2' Output Analysis Visualization Easier. R package version 1.5.1, https://github.com/cafferychen777/ggpicrust2.","code":"@Manual{,   title = {ggpicrust2: Make 'PICRUSt2' Output Analysis and Visualization Easier},   author = {Chen Yang and Liangliang Zhang},   year = {2023},   note = {R package version 1.5.1},   url = {https://github.com/cafferychen777/ggpicrust2}, }"},{"path":"/index.html","id":"ggpicrust2-documentation","dir":"","previous_headings":"","what":"Make PICRUSt2 Output Analysis and Visualization Easier","title":"Make PICRUSt2 Output Analysis and Visualization Easier","text":"ggpicrust2 comprehensive package integrates pathway name/description annotations, ten advanced differential abundance (DA) methods, visualization DA results. offers comprehensive solution analyzing interpreting results PICRUSt2 functional prediction seamless intuitive way. Whether researcher, data scientist, bioinformatician, ggpicrust2 can help better understand underlying biological processes mechanisms play PICRUSt2 output data. interested exploring output data PICRUSt2, ggpicrust2 tool need.","code":""},{"path":"/index.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of Contents","title":"Make PICRUSt2 Output Analysis and Visualization Easier","text":"Citation Installation Stay Updated Workflow Output ko2kegg_abundance() pathway_daa() pathway_annotation() pathway_errorbar() pathway_heatmap() pathway_pca() Author’s Projects","code":""},{"path":"/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Make PICRUSt2 Output Analysis and Visualization Easier","text":"use ggpicrust2 research, please cite following paper: Chen Yang, Aaron Burberry, Xuan Cao, Jiahao Mai, Liangliang Zhang. (2023). ggpicrust2: R package PICRUSt2 predicted functional profile analysis visualization. arXiv preprint arXiv:2303.10388. BibTeX entry: @misc{yang2023ggpicrust2, title={ggpicrust2: R package PICRUSt2 predicted functional profile analysis visualization}, author={Chen Yang Aaron Burberry Jiahao Mai Xuan Cao Liangliang Zhang}, year={2023}, eprint={2303.10388}, archivePrefix={arXiv}, primaryClass={stat.AP} }","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Make PICRUSt2 Output Analysis and Visualization Easier","text":"can install stable version ggpicrust2 CRAN : install latest development version ggpicrust2 GitHub, can use:","code":"install.packages(\"ggpicrust2\") # Install the devtools package if not already installed # install.packages(\"devtools\")  # Install ggpicrust2 from GitHub devtools::install_github(\"cafferychen777/ggpicrust2\")"},{"path":"/index.html","id":"stay-updated","dir":"","previous_headings":"","what":"Stay Updated","title":"Make PICRUSt2 Output Analysis and Visualization Easier","text":"Follow Twitter latest ggpicrust2 updates:","code":""},{"path":"/index.html","id":"workflow","dir":"","previous_headings":"","what":"Workflow","title":"Make PICRUSt2 Output Analysis and Visualization Easier","text":"easiest way analyze PICRUSt2 output using ggpicrust2() function. entire pipeline can run ggpicrust2() function. ggpicrust2() integrates ko abundance kegg pathway abundance conversion, annotation pathway, differential abundance (DA) analysis, DA results visualization. trouble running ggpicrust2(), can debug running separate function, greatly increase speed analysis visualization","code":""},{"path":"/index.html","id":"ggpicrust2","dir":"","previous_headings":"Workflow","what":"ggpicrust2()","title":"Make PICRUSt2 Output Analysis and Visualization Easier","text":"","code":"#If you want to analysis kegg pathway abundance instead of ko within the pathway. You should turn ko_to_kegg to TRUE. #The kegg pathway typically have the more explainable description. metadata <-   read_delim(     \"~/Microbiome/C9orf72/Code And Data/new_metadata.txt\",     delim = \"\\t\",     escape_double = FALSE,     trim_ws = TRUE   ) group <- \"Enviroment\" daa_results_list <-   ggpicrust2(     file = \"/Users/apple/Microbiome/C9orf72/Code And Data/picrust2_out/KO_metagenome_out/pred_metagenome_unstrat.tsv/pred_metagenome_unstrat.tsv\",     metadata = metadata,     group = \"Enviroment\",     pathway = \"KO\",     daa_method = \"LinDA\",     p_values_bar = TRUE,     p.adjust = \"BH\",     ko_to_kegg = TRUE,     order = \"pathway_class\"     select = NULL,     reference = NULL # If your metadata[,group] has more than two levels, please specify a reference.   )    #If you want to analysis the EC. MetaCyc. KO without conversions. You should turn ko_to_kegg to FALSE. metadata <-   read_delim(     \"~/Microbiome/C9orf72/Code And Data/new_metadata.txt\",     delim = \"\\t\",     escape_double = FALSE,     trim_ws = TRUE   ) group <- \"Enviroment\" daa_results_list <-   ggpicrust2(     file = \"//Users/apple/Microbiome/C9orf72/Code And Data/picrust2_out/EC_metagenome_out/pred_metagenome_unstrat.tsv/pred_metagenome_unstrat.tsv\",     metadata = metadata,     group = \"Enviroment\",     pathway = \"EC\",     daa_method = \"LinDA\",     p_values_bar = TRUE,     order = \"group\",     ko_to_kegg = FALSE,     x_lab = \"description\",     p.adjust = \"BH\",     select = NULL,     reference = NULL   )"},{"path":"/index.html","id":"if-an-error-occurs-with-ggpicrust2-please-use-the-following-workflow","dir":"","previous_headings":"Workflow","what":"If an error occurs with ggpicrust2, please use the following workflow.","title":"Make PICRUSt2 Output Analysis and Visualization Easier","text":"","code":"#If you want to analysis kegg pathway abundance instead of ko within the pathway. You should turn ko_to_kegg to TRUE. #The kegg pathway typically have the more explainable description. #metadata should be tibble. metadata <-   read_delim(     \"~/Microbiome/C9orf72/Code And Data/new_metadata.txt\",     delim = \"\\t\",     escape_double = FALSE,     trim_ws = TRUE   )  kegg_abundance <-   ko2kegg_abundance(     \"/Users/apple/Downloads/pred_metagenome_unstrat.tsv/pred_metagenome_unstrat.tsv\"   )  group <- \"Enviroment\"  daa_results_df <-   pathway_daa(     abundance = kegg_abundance,     metadata = metadata,     group = group,     daa_method = \"ALDEx2\",     select = NULL,     reference = NULL   )  #if you are using LinDA, limme voom and Maaslin2, please specify a reference just like followings code. # daa_results_df <- pathway_daa(abundance = kegg_abundance, metadata = metadata, group = group, daa_method = \"ALDEx2\", select = NULL, reference = \"Harvard BRI\")  daa_sub_method_results_df <-   daa_results_df[daa_results_df$method == \"ALDEx2_Kruskal-Wallace test\", ]  daa_annotated_sub_method_results_df <-   pathway_annotation(pathway = \"KO\",                      daa_results_df = daa_sub_method_results_df,                      ko_to_kegg = TRUE)  Group <-   metadata$Enviroment # column which you are interested in metadata  # select parameter format in pathway_error() is c(\"ko00562\", \"ko00440\", \"ko04111\", \"ko05412\", \"ko00310\", \"ko04146\", \"ko00600\", \"ko04142\", \"ko00604\", \"ko04260\", \"ko04110\", \"ko04976\", \"ko05222\", \"ko05416\", \"ko00380\", \"ko05322\", \"ko00625\", \"ko00624\", \"ko00626\", \"ko00621\")  daa_results_list <-   pathway_errorbar(     abundance = kegg_abundance,     daa_results_df = daa_annotated_sub_method_results_df,     Group = Group,     p_values_threshold = 0.05,     order = \"pathway_class\",     select = NULL,     ko_to_kegg = TRUE,     p_value_bar = TRUE,     colors = NULL,     x_lab = \"pathway_name\"   ) # x_lab can be set \"feature\" which represents kegg pathway id.  # If you want to analysis the EC. MetaCyc. KO without conversions. You should turn ko_to_kegg to FALSE. metadata <-   read_delim(     \"~/Microbiome/C9orf72/Code And Data/new_metadata.txt\",     delim = \"\\t\",     escape_double = FALSE,     trim_ws = TRUE   )  #ko_abundance should be data.frame instead of tibble #ID should be in the first column ko_abundance <-   read.delim(     \"/Users/apple/Downloads/pred_metagenome_unstrat.tsv/pred_metagenome_unstrat.tsv\"   ) #sometimes there are function, pathway or something else. Change function. when needed rownames(ko_abundance) <- ko_abundance$function. ko_abundance <- ko_abundance[, -1]  group <- \"Enviroment\"  daa_results_df <-   pathway_daa(     abundance = ko_abundance,     metadata = metadata,     group = group,     daa_method = \"ALDEx2\",     select = NULL,     reference = NULL   )  #if you are using LinDA, limme voom and Maaslin2, please specify a reference just like followings code. # daa_results_df <- pathway_daa(abundance = kegg_abundance, metadata = metadata, group = group, daa_method = \"ALDEx2\", select = NULL, reference = \"Harvard BRI\")  daa_sub_method_results_df <-   daa_results_df[daa_results_df$method == \"ALDEx2_Kruskal-Wallace test\", ]  daa_annotated_sub_method_results_df <-   pathway_annotation(pathway = \"KO\",                      daa_results_df = daa_sub_method_results_df,                      ko_to_kegg = FALSE)  Group <-   metadata$Enviroment # column which you are interested in metadata  # select parameter format in pathway_error() is c(\"K00001\", \"K00002\", \"K00003\", \"K00004\")  daa_results_list <-   pathway_errorbar(     abundance = ko_abundance,     daa_results_df = daa_annotated_sub_method_results_df,     Group = Group,     p_values_threshold = 0.05,     order = \"pathway_class\",     select = NULL,     ko_to_kegg = FALSE,     p_value_bar = TRUE,     colors = NULL,     x_lab = \"description\"   )"},{"path":"/index.html","id":"output","dir":"","previous_headings":"","what":"Output","title":"Make PICRUSt2 Output Analysis and Visualization Easier","text":"typical output ggpicrust2 like .","code":""},{"path":[]},{"path":"/index.html","id":"ko2kegg_abundance","dir":"","previous_headings":"function details","what":"ko2kegg_abundance()","title":"Make PICRUSt2 Output Analysis and Visualization Easier","text":"KEGG Orthology(KO) classification system developed Kyoto Encyclopedia Genes Genomes (KEGG) data-base(Kanehisa et al., 2022). uses hierarchical structure classify enzymes based reactions catalyze. better understand pathways’ role different groups classify pathways, KO abundance table needs converted KEGG pathway abundance. PICRUSt2 removes function PICRUSt. ko2kegg_abundance() can help convert table.","code":"# Sample usage of the ko2kegg_abundance function  # Assume that the KO abundance table is stored in a file named \"ko_abundance.tsv\"  ko_abundance_file <- \"ko_abundance.tsv\"  kegg_abundance <- ko2kegg_abundance(ko_abundance_file)  # The resulting kegg_abundance data frame can now be used for further analysis and visualization."},{"path":"/index.html","id":"pathway_daa","dir":"","previous_headings":"function details","what":"pathway_daa()","title":"Make PICRUSt2 Output Analysis and Visualization Easier","text":"Differential abundance(DA) analysis plays major role PICRUSt2 downstream analysis. pathway_daa() integrates almost DA methods applicable predicted functional profile excludes ANCOM ANCOMBC. includes ALDEx2(Fernandes et al., 2013), DEseq2(Love et al., 2014), Maaslin2(Mallick et al., 2021), LinDA(Zhou et al., 2022), edgeR(Robinson et al., 2010) , limma voom(Ritchie et al., 2015), metagenomeSeq(Paulson et al., 2013), lefser(Segata et al., 2011).","code":"#the abundance table is better to be data.frame rather than tibble #you can use ko2_kegg_abundance output abundance <- ko2kegg_abundance(ko_abundance_file) metadata <-   read_delim(     \"~/Microbiome/C9orf72/Code And Data/new_metadata.txt\",     delim = \"\\t\",     escape_double = FALSE,     trim_ws = TRUE   ) group <- \"Enviroment\" #daa_method default is \"ALDex2\" daa_results_df <- pathway_daa(abundance = abundance,            metadata = metadata,            group = group ,            daa_method = \"limma voom\",            select = NULL,            p.adjust = \"BH\",            reference = NULL) #If you group levels >3 and want to use the LinDA, limme voom and Maaslin2, you should give a reference. metadata <-   read_delim(     \"~/Microbiome/C9orf72/Code And Data/new_metadata.txt\",     delim = \"\\t\",     escape_double = FALSE,     trim_ws = TRUE   ) group <- \"Group\" daa_results_df <- pathway_daa(abundance = abundance,            metadata = metadata,            group = group ,            daa_method = \"limma voom\",            select = NULL,            p.adjust = \"BH\",            reference = \"Harvard BRI\")"},{"path":"/index.html","id":"pathway_annotation","dir":"","previous_headings":"function details","what":"pathway_annotation()","title":"Make PICRUSt2 Output Analysis and Visualization Easier","text":"China using kegg pathway annotation, Please make sure internet can break firewall.","code":"daa_results_df <- pathway_annotation(pathway = \"KO\", daa_results_df = daa_results_df, ko_to_kegg = TRUE)"},{"path":"/index.html","id":"pathway_errorbar","dir":"","previous_headings":"function details","what":"pathway_errorbar()","title":"Make PICRUSt2 Output Analysis and Visualization Easier","text":"","code":"pathway_errorbar(abundance = abundance,            daa_results_df = daa_results_df,            Group = metadata$Enviroment,            ko_to_kegg = TRUE,            p_values_threshold = 0.05,            order = \"pathway_class\",            select = NULL,            p_value_bar = TRUE,            colors = NULL,            x_lab = NULL)"},{"path":"/index.html","id":"pathway_heatmap","dir":"","previous_headings":"function details","what":"pathway_heatmap()","title":"Make PICRUSt2 Output Analysis and Visualization Easier","text":"section, demonstrate create pathway heatmap using pathway_heatmap function ggpicrust2 package. function visualizes relative abundance pathways different samples. First, create example functional pathway abundance data metadata: Next, use pathway_heatmap function create heatmap: Finally, display resulting heatmap:","code":"# Create example functional pathway abundance data abundance_example <- matrix(rnorm(30), nrow = 10, ncol = 3) rownames(abundance_example) <- paste0(\"Sample\", 1:10) colnames(abundance_example) <- c(\"PathwayA\", \"PathwayB\", \"PathwayC\")  # Create example metadata # Please change your sample id's column name to sample_name metadata_example <- data.frame(sample_name = rownames(abundance_example),                                group = factor(rep(c(\"Control\", \"Treatment\"), each = 5))) # Create a heatmap heatmap_plot <- ggpicrust2::pathway_heatmap(t(abundance_example), metadata_example, \"group\") print(heatmap_plot)"},{"path":"/index.html","id":"pathway_pca","dir":"","previous_headings":"function details","what":"pathway_pca()","title":"Make PICRUSt2 Output Analysis and Visualization Easier","text":"section, demonstrate perform Principal Component Analysis (PCA) functional pathway abundance data create visualizations PCA results using pathway_pca function ggpicrust2 package. First, create example functional pathway abundance data metadata: Next, use pathway_pca function perform PCA create visualizations: Finally, display resulting PCA plot:","code":"# Create example functional pathway abundance data abundance_example <- data.frame(A = rnorm(10), B = rnorm(10), C = rnorm(10))  # Create example metadata metadata_example <- tibble::tibble(sample_id = 1:10,                                    group = factor(rep(c(\"Control\", \"Treatment\"), each = 5))) # Perform PCA and create visualizations pca_plot <- ggpicrust2::pathway_pca(t(abundance_example), metadata_example, \"group\") print(pca_plot)"},{"path":[]},{"path":"/index.html","id":"authors-other-projects","dir":"","previous_headings":"","what":"Author’s other projects","title":"Make PICRUSt2 Output Analysis and Visualization Easier","text":"MicrobiomeGallery, web-based platform sharing microbiome data visualization code datasets. （’s still construction）","code":""},{"path":"/reference/ggpicrust2.html","id":null,"dir":"Reference","previous_headings":"","what":"This function integrates pathway name/description annotations, ten of the most advanced differential abundance (DA) methods, and visualization of DA results. — ggpicrust2","title":"This function integrates pathway name/description annotations, ten of the most advanced differential abundance (DA) methods, and visualization of DA results. — ggpicrust2","text":"function integrates pathway name/description annotations, ten advanced differential abundance (DA) methods, visualization DA results.","code":""},{"path":"/reference/ggpicrust2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function integrates pathway name/description annotations, ten of the most advanced differential abundance (DA) methods, and visualization of DA results. — ggpicrust2","text":"","code":"ggpicrust2(   file,   metadata,   group,   pathway,   daa_method = \"ALDEx2\",   ko_to_kegg = FALSE,   p.adjust = \"BH\",   order = \"group\",   p_values_bar = TRUE,   x_lab = NULL,   select = NULL,   reference = NULL,   colors = NULL )"},{"path":"/reference/ggpicrust2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function integrates pathway name/description annotations, ten of the most advanced differential abundance (DA) methods, and visualization of DA results. — ggpicrust2","text":"file character, file path store picrust2 export files metadata tibble, consisting sample information group character, name group pathway character, consisting \"EC\", \"KO\", \"MetaCyc\" daa_method character, chosen differential abundance analysis (DA) method ko_to_kegg character control conversion KO abundance KEGG abundance p.adjust character, method adjust p-values order character control order main plot rows p_values_bar character control main plot p_values bar x_lab character control x-axis label name, can choose \"feature\",\"pathway_name\" \"description\" select vector consisting pathway names selected reference character, reference group level several DA methods colors vector consisting colors number","code":""},{"path":"/reference/ggpicrust2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function integrates pathway name/description annotations, ten of the most advanced differential abundance (DA) methods, and visualization of DA results. — ggpicrust2","text":"daa.results.df, dataframe DA results","code":""},{"path":"/reference/ggpicrust2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function integrates pathway name/description annotations, ten of the most advanced differential abundance (DA) methods, and visualization of DA results. — ggpicrust2","text":"","code":"if (FALSE) { # Load necessary data: abundance data and metadata abundance_file <- \"path/to/your/abundance_file.tsv\" metadata <- read.csv(\"path/to/your/metadata.csv\")  # Run ggpicrust2 with desired parameters results <- ggpicrust2(file = abundance_file,                       metadata = metadata,                       group = \"your_group_column\",                       pathway = \"KO\",                       daa_method = \"LinDA\",                       ko_to_kegg = TRUE,                       order = \"pathway_class\",                       p_values_bar = TRUE,                       x_lab = \"pathway_name\")  # Access the plot and results dataframe for the first DA method example_plot <- results[[1]]$plot example_results <- results[[1]]$results }"},{"path":"/reference/ko2kegg_abundance.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert KO abundance in picrust2 export files to KEGG pathway abundance — ko2kegg_abundance","title":"Convert KO abundance in picrust2 export files to KEGG pathway abundance — ko2kegg_abundance","text":"function takes file containing KO (KEGG Orthology) abundance data picrust2 export format converts KEGG pathway abundance data. input file .tsv, .txt, .csv format.","code":""},{"path":"/reference/ko2kegg_abundance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert KO abundance in picrust2 export files to KEGG pathway abundance — ko2kegg_abundance","text":"","code":"ko2kegg_abundance(file)"},{"path":"/reference/ko2kegg_abundance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert KO abundance in picrust2 export files to KEGG pathway abundance — ko2kegg_abundance","text":"file character string representing file path input file containing KO abundance data picrust2 export format. input file KO identifiers first column sample identifiers first row. remaining cells contain abundance values KO-sample pair.","code":""},{"path":"/reference/ko2kegg_abundance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert KO abundance in picrust2 export files to KEGG pathway abundance — ko2kegg_abundance","text":"data frame KEGG pathway abundance values. Rows represent KEGG pathways, identified KEGG pathway IDs. Columns represent samples, identified sample IDs input file. cell contains abundance specific KEGG pathway given sample, calculated summing abundances corresponding KOs input file.","code":""},{"path":"/reference/ko2kegg_abundance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert KO abundance in picrust2 export files to KEGG pathway abundance — ko2kegg_abundance","text":"","code":"if (FALSE) { library(ggpicrust2) # Prepare an example input file input_file <- system.file(\"extdata\", \"example_ko_abundance.tsv\", package = \"ggpicrust2\")  # Run ko2kegg_abundance function kegg_abundance <- ko2kegg_abundance(file = input_file) }"},{"path":"/reference/pathway_annotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Pathway information annotation of ","title":"Pathway information annotation of ","text":"function two primary use cases: 1. Annotating pathway information using output file PICRUSt2. 2. Annotating pathway information output `pathway_daa` function, converting KO abundance KEGG pathway abundance `ko_to_kegg` set TRUE.","code":""},{"path":"/reference/pathway_annotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pathway information annotation of ","text":"","code":"pathway_annotation(   file = NULL,   pathway = NULL,   daa_results_df = NULL,   ko_to_kegg = FALSE )"},{"path":"/reference/pathway_annotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pathway information annotation of ","text":"file character, address store PICRUSt2 export files. Provide parameter using function first use case. pathway character, consisting \"EC\", \"KO\", \"MetaCyc\" daa_results_df data frame, output pathway_daa. Provide parameter using function second use case. ko_to_kegg logical, decide convert KO abundance KEGG pathway abundance. Default FALSE. Set TRUE using function second use case.","code":""},{"path":"/reference/pathway_annotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pathway information annotation of ","text":"data frame containing pathway annotation information. data frame following columns: feature: feature ID pathway (e.g., KO, EC, MetaCyc ID). description: description name pathway. columns depending input parameters type pathway. ko_to_kegg set TRUE, output data frame also include following columns: pathway_name: name KEGG pathway. pathway_description: description KEGG pathway. pathway_class: class KEGG pathway. pathway_map: KEGG pathway map ID.","code":""},{"path":"/reference/pathway_annotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pathway information annotation of ","text":"","code":"if (FALSE) { # Prepare the required input files and data frames # Then, you can use the pathway_annotation function as follows:  # Use case 1: Annotating pathway information using the output file from PICRUSt2 result1 <- pathway_annotation(file = \"path/to/picrust2/export/file.txt\",                               pathway = \"KO\",                               daa_results_df = NULL,                               ko_to_kegg = FALSE)  # Use case 2: Annotating pathway information from the output of pathway_daa function # and converting KO abundance to KEGG pathway abundance result2 <- pathway_annotation(file = NULL,                               pathway = \"KO\",                               daa_results_df = your_daa_results_df,                               ko_to_kegg = TRUE) }"},{"path":"/reference/pathway_daa.html","id":null,"dir":"Reference","previous_headings":"","what":"Predictional functional patwhay differential abundance (DA) — pathway_daa","title":"Predictional functional patwhay differential abundance (DA) — pathway_daa","text":"Predictional functional patwhay differential abundance (DA)","code":""},{"path":"/reference/pathway_daa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predictional functional patwhay differential abundance (DA) — pathway_daa","text":"","code":"pathway_daa(   abundance,   metadata,   group,   daa_method = \"ALDEx2\",   select = NULL,   p.adjust = \"BH\",   reference = NULL )"},{"path":"/reference/pathway_daa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predictional functional patwhay differential abundance (DA) — pathway_daa","text":"abundance data frame containing predicted functional pathway abundance metadata tibble containing samples information group character specifying group name differential abundance analysis daa_method character specifying method differential abundance analysis, default \"ALDEx2\" select vector containing sample names analysis, NULL samples included, default NULL p.adjust character specifying method p-value adjustment, default \"BH\" reference character specifying reference group level, required several differential abundance analysis methods LinDA, limme voom Maaslin2, default NULL","code":""},{"path":"/reference/pathway_daa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predictional functional patwhay differential abundance (DA) — pathway_daa","text":"data frame containing differential abundance analysis results.","code":""},{"path":"/reference/pathway_daa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predictional functional patwhay differential abundance (DA) — pathway_daa","text":"","code":"# \\donttest{ library(ggpicrust2) library(MicrobiomeStat) #> Registered S3 method overwritten by 'rmutil': #>   method         from #>   print.response httr abundance <- data.frame(sample1 = c(10, 20, 30), sample2 = c(20, 30, 40), sample3 = c(30, 40, 50), row.names = c(\"pathway1\", \"pathway2\", \"pathway3\"))  metadata <- tibble::tibble(sample = paste0(\"sample\", 1:3), group = c(\"control\", \"control\", \"treatment\"))  #Run pathway_daa function result <- pathway_daa(abundance = abundance, metadata = metadata, group = \"group\", daa_method = \"LinDA\") #> 0  features are filtered! #> The filtered data has  3  samples and  3  features will be tested! #> Fit linear models ... #> Completed. # }"},{"path":"/reference/pathway_errorbar.html","id":null,"dir":"Reference","previous_headings":"","what":"The function pathway_errorbar() is used to visualize the results of functional pathway differential abundance analysis as error bar plots. — pathway_errorbar","title":"The function pathway_errorbar() is used to visualize the results of functional pathway differential abundance analysis as error bar plots. — pathway_errorbar","text":"function pathway_errorbar() used visualize results functional pathway differential abundance analysis error bar plots.","code":""},{"path":"/reference/pathway_errorbar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The function pathway_errorbar() is used to visualize the results of functional pathway differential abundance analysis as error bar plots. — pathway_errorbar","text":"abundance data frame row names representing pathways column names representing samples. element represents relative abundance corresponding pathway corresponding sample. daa_results_df data frame containing results differential abundance analysis pathways, generated pathway_daa function. x_lab column name daa_results_df. Group data frame vector assigns sample group. groups used color samples figure. ko_to_kegg logical parameter indicating whether convertion convert ko abundance kegg abundance. p_values_threshold numeric parameter specifying threshold statistical significance differential abundance. Pathways p-values threshold considered significant. order parameter controlling ordering rows figure. options : \"p_values\" (order p-values), \"name\" (order pathway name), \"group\" (order group highest mean relative abundance), \"pathway_class\" (order pathway category). select vector pathway names included figure. can used limit number pathways displayed. NULL, pathways displayed. p_value_bar logical parameter indicating whether display bar showing p-value threshold significance. TRUE, bar displayed. colors vector colors used represent groups figure. color corresponds group. x_lab character string used x-axis label figure. default value \"description\" KOs'descriptions \"pathway_name\" KEGG pathway names.","code":""},{"path":"/reference/pathway_errorbar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The function pathway_errorbar() is used to visualize the results of functional pathway differential abundance analysis as error bar plots. — pathway_errorbar","text":"figure showing error bar plot differential abundance analysis results functional pathways.","code":""},{"path":"/reference/pathway_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Create pathway heatmap — pathway_heatmap","title":"Create pathway heatmap — pathway_heatmap","text":"function creates heatmap predicted functional pathway abundance data. function first makes abundance data relative, converts abundance data long format orders samples based environment information. heatmap created using `ggplot2` library. color palette, appearance color bar heatmap can customized using `scale_fill_gradientn`, `theme` `guides` functions respectively.","code":""},{"path":"/reference/pathway_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create pathway heatmap — pathway_heatmap","text":"abundance matrix data frame pathway abundance data, columns correspond samples rows correspond pathways. metadata data frame metadata, row corresponds sample column corresponds metadata variable. group character string specifying column name metadata data frame contains group variable.","code":""},{"path":"/reference/pathway_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create pathway heatmap — pathway_heatmap","text":"ggplot heatmap object. output ggplot object representing heatmap predicted functional pathway abundance data. heatmap visualizes z score pathways different samples.","code":""},{"path":"/reference/pathway_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create pathway heatmap — pathway_heatmap","text":"","code":"# Create example functional pathway abundance data abundance_example <- matrix(rnorm(30), nrow = 10, ncol = 3) rownames(abundance_example) <- paste0(\"Sample\", 1:10) colnames(abundance_example) <- c(\"PathwayA\", \"PathwayB\", \"PathwayC\")  # Create example metadata # Please ensure the sample IDs in the metadata have the column name \"sample_name\" metadata_example <- data.frame(sample_name = rownames(abundance_example),                                group = factor(rep(c(\"Control\", \"Treatment\"), each = 5)))  # Create a heatmap heatmap_plot <- pathway_heatmap(t(abundance_example), metadata_example, \"group\") print(heatmap_plot)"},{"path":"/reference/pathway_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Principal Component Analysis (PCA) on functional pathway abundance data and create visualizations of the PCA results. — pathway_pca","title":"Perform Principal Component Analysis (PCA) on functional pathway abundance data and create visualizations of the PCA results. — pathway_pca","text":"Perform Principal Component Analysis (PCA) functional pathway abundance data create visualizations PCA results.","code":""},{"path":"/reference/pathway_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Principal Component Analysis (PCA) on functional pathway abundance data and create visualizations of the PCA results. — pathway_pca","text":"","code":"pathway_pca(abundance, metadata, group)"},{"path":"/reference/pathway_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Principal Component Analysis (PCA) on functional pathway abundance data and create visualizations of the PCA results. — pathway_pca","text":"abundance data frame, predicted functional pathway abundance. metadata tibble, consisting sample information. group character, group name.","code":""},{"path":"/reference/pathway_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Principal Component Analysis (PCA) on functional pathway abundance data and create visualizations of the PCA results. — pathway_pca","text":"ggplot object showing PCA results.","code":""},{"path":"/reference/pathway_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Principal Component Analysis (PCA) on functional pathway abundance data and create visualizations of the PCA results. — pathway_pca","text":"","code":"# Create example functional pathway abundance data abundance_example <- data.frame(A = rnorm(10), B = rnorm(10), C = rnorm(10))  # Create example metadata metadata_example <- tibble::tibble(sample_id = 1:10,                                    group = factor(rep(c(\"Control\", \"Treatment\"), each = 5)))  # Perform PCA and create visualizations pca_plot <- pathway_pca(t(abundance_example), metadata_example, \"group\") print(pca_plot)"},{"path":[]},{"path":"/news/index.html","id":"ggpicrust2-150","dir":"Changelog","previous_headings":"","what":"ggpicrust2 1.5.0","title":"ggpicrust2 1.5.0","text":"CRAN release: 2023-04-04","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"/news/index.html","id":"ggpicrust2-149","dir":"Changelog","previous_headings":"","what":"ggpicrust2 1.4.9","title":"ggpicrust2 1.4.9","text":"CRAN release: 2023-03-28","code":""},{"path":"/news/index.html","id":"ggpicrust2-148","dir":"Changelog","previous_headings":"","what":"ggpicrust2 1.4.8","title":"ggpicrust2 1.4.8","text":"CRAN release: 2023-03-24","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"/news/index.html","id":"ggpicrust2-020","dir":"Changelog","previous_headings":"","what":"ggpicrust2 0.2.0","title":"ggpicrust2 0.2.0","text":"Added NEWS.md file track changes package.","code":""}]
